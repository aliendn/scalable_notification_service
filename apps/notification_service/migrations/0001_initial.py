# Generated by Django 5.2.2 on 2025-06-06 21:12

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('event_type', models.CharField(max_length=50, verbose_name='event type')),
                ('details', models.JSONField(default=dict, verbose_name='details')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='events timestamp')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('title', models.CharField(max_length=255, verbose_name='subject')),
                ('description', models.TextField(max_length=20000, verbose_name='description')),
                ('template_type', models.PositiveSmallIntegerField(choices=[(0, 'SYSTEM'), (1, 'SMS'), (2, 'EMAIL')], verbose_name='application service type')),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('entity_type', models.PositiveSmallIntegerField(choices=[(0, 'Company'), (1, 'Camera'), (2, 'EMAIL')], verbose_name='Entity type')),
                ('entity_id', models.UUIDField(default=uuid.uuid4, verbose_name='Entity ID')),
                ('notification_type', models.PositiveSmallIntegerField(choices=[(0, 'SYSTEM'), (1, 'SMS'), (2, 'EMAIL')], verbose_name='Notification type')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='is type enabled')),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'indexes': [models.Index(fields=['entity_type', 'entity_id', 'notification_type'], name='notificatio_entity__ed04d1_idx')],
                'unique_together': {('entity_type', 'entity_id', 'notification_type')},
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(max_length=10000, verbose_name='description')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('source', models.CharField(blank=True, max_length=255, null=True, verbose_name='source of template notification')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, 'LOW'), (1, 'MEDIUM'), (2, 'HIGH'), (3, 'CRITICAL')], verbose_name='application priority type')),
                ('is_viewed', models.BooleanField(default=False, verbose_name='viewed by user')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='timestamp')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_emails', to=settings.AUTH_USER_MODEL, verbose_name='receiver')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notification_service.event')),
            ],
            options={
                'verbose_name': 'Email Notification',
                'verbose_name_plural': 'Email Notifications',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['receiver', 'is_viewed', 'priority'], name='notificatio_receive_4a55dc_idx'), models.Index(fields=['timestamp'], name='notificatio_timesta_aa39e7_idx')],
            },
        ),
        migrations.CreateModel(
            name='SMSNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(max_length=10000, verbose_name='description')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('source', models.CharField(blank=True, max_length=255, null=True, verbose_name='source of template notification')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, 'LOW'), (1, 'MEDIUM'), (2, 'HIGH'), (3, 'CRITICAL')], verbose_name='application priority type')),
                ('is_viewed', models.BooleanField(default=False, verbose_name='viewed by user')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='timestamp')),
                ('phone_number', models.CharField(max_length=16, verbose_name='phone number')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notification_service.event')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_sms', to=settings.AUTH_USER_MODEL, verbose_name='receiver')),
            ],
            options={
                'verbose_name': 'Sms Notification',
                'verbose_name_plural': 'Sms Notifications',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['receiver', 'is_viewed', 'priority'], name='notificatio_receive_bc6470_idx'), models.Index(fields=['timestamp'], name='notificatio_timesta_b83408_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(max_length=10000, verbose_name='description')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('source', models.CharField(blank=True, max_length=255, null=True, verbose_name='source of template notification')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, 'LOW'), (1, 'MEDIUM'), (2, 'HIGH'), (3, 'CRITICAL')], verbose_name='application priority type')),
                ('is_viewed', models.BooleanField(default=False, verbose_name='viewed by user')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='timestamp')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notification_service.event')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_system_notifications', to=settings.AUTH_USER_MODEL, verbose_name='receiver')),
            ],
            options={
                'verbose_name': 'System Notification',
                'verbose_name_plural': 'System Notifications',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['receiver', 'is_viewed', 'priority'], name='notificatio_receive_95411a_idx'), models.Index(fields=['timestamp'], name='notificatio_timesta_14a417_idx')],
            },
        ),
    ]
