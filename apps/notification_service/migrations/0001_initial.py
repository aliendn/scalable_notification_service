# Generated by Django 4.2.22 on 2025-06-07 07:31

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(max_length=10000, verbose_name='description')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('source', models.CharField(blank=True, max_length=255, null=True, verbose_name='source of template notification')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, 'LOW'), (1, 'MEDIUM'), (2, 'HIGH'), (3, 'CRITICAL')], verbose_name='application priority type')),
                ('is_viewed', models.BooleanField(default=False, verbose_name='viewed by user')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='timestamp')),
                ('type_notification', models.PositiveSmallIntegerField(choices=[(0, 'CREATE_CUSTOMER_BY_EMPLOYEE'), (1, 'RECORDING_CAMERA'), (2, 'STOPPED_CAMERA'), (3, 'ONLINE_CAMERA'), (4, 'OFFLINE_CAMERA')], verbose_name='application type of notification')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
            ],
            options={
                'verbose_name': 'Email Notification',
                'verbose_name_plural': 'Email Notifications',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('event_type', models.CharField(max_length=50, verbose_name='event type')),
                ('details', models.JSONField(default=dict, verbose_name='details')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='events timestamp')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='SMSNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(max_length=10000, verbose_name='description')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('source', models.CharField(blank=True, max_length=255, null=True, verbose_name='source of template notification')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, 'LOW'), (1, 'MEDIUM'), (2, 'HIGH'), (3, 'CRITICAL')], verbose_name='application priority type')),
                ('is_viewed', models.BooleanField(default=False, verbose_name='viewed by user')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='timestamp')),
                ('type_notification', models.PositiveSmallIntegerField(choices=[(0, 'CREATE_CUSTOMER_BY_EMPLOYEE'), (1, 'RECORDING_CAMERA'), (2, 'STOPPED_CAMERA'), (3, 'ONLINE_CAMERA'), (4, 'OFFLINE_CAMERA')], verbose_name='application type of notification')),
                ('phone_number', models.CharField(max_length=16, verbose_name='phone number')),
            ],
            options={
                'verbose_name': 'Sms Notification',
                'verbose_name_plural': 'Sms Notifications',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SystemNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='Modify Time')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(max_length=10000, verbose_name='description')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('source', models.CharField(blank=True, max_length=255, null=True, verbose_name='source of template notification')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, 'LOW'), (1, 'MEDIUM'), (2, 'HIGH'), (3, 'CRITICAL')], verbose_name='application priority type')),
                ('is_viewed', models.BooleanField(default=False, verbose_name='viewed by user')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='timestamp')),
                ('type_notification', models.PositiveSmallIntegerField(choices=[(0, 'CREATE_CUSTOMER_BY_EMPLOYEE'), (1, 'RECORDING_CAMERA'), (2, 'STOPPED_CAMERA'), (3, 'ONLINE_CAMERA'), (4, 'OFFLINE_CAMERA')], verbose_name='application type of notification')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notification_service.event')),
            ],
            options={
                'verbose_name': 'System Notification',
                'verbose_name_plural': 'System Notifications',
                'ordering': ['-timestamp'],
            },
        ),
    ]
